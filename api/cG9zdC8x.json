{"total":16,"pageSize":10,"pageCount":2,"current":1,"data":[{"title":"在linux、mac下快速简单的安装docker","date":"2018-08-20T17:22:22.000Z","author":"许盛","excerpt":"<blockquote>\n<p>参考：<a href=\"https://yeasy.gitbooks.io/docker_practice/content/install/centos.html\" target=\"_blank\" rel=\"noopener\">https://yeasy.gitbooks.io/docker_practice/content/install/centos.html</a></p>\n</blockquote>\n<p>安装 <code>docker</code> 的方式其实五花八门，不同的系统也分别对应不同的方式，这里仅仅只介绍常用的系统的最最简单傻瓜式的方法。</p>","slug":"在linux、mac下快速简单的安装docker","tags":["linux","docker"],"categories":["docker"]},{"title":"hexo发布之后gitpage自定义域名失效","date":"2018-08-20T16:51:07.000Z","author":"许盛","excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>使用 <code>gitpage</code> 功能将博客托管在了 github 上，并配置 <code>CNAME</code> 将自己的域名解析了过去，在 <code>github</code> 的仓库设置中开始 <code>custom domain</code> 的功能，这时候就可以直接使用自己的域名访问啦。</p>\n<p><img src=\"/assets/images/hexo发布之后gitpage自定义域名失效/custom-domain.png\" alt=\"custom-domain\"></p>\n<p>但是发现一个问题是，每次配置 <code>custom domain</code> 之后，再次 <code>hexo deploy</code> 之后，<code>custom domain</code> 会被重置失效。</p>","slug":"hexo发布之后gitpage自定义域名失效","tags":["hexo"],"categories":["hexo"]},{"title":"使用docker快速部署hexo博客","date":"2018-08-20T15:47:40.000Z","author":"许盛","excerpt":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">hexo</a> 是一款静态博客工具，不涉及到任何后端、数据库啥的。</p>\n<p>也就是说不管过程中怎么乱七八糟的捣鼓，最终其实在部署的时候需要使用的，其实就是一堆前端静态资源，<code>html</code>、<code>js</code>、<code>css</code> 、<code>jpg</code> 等等，也就是使用 <code>hexo g</code> 命令生成出来的 <code>public</code> 文件夹中所包含的部分。</p>","slug":"使用docker快速部署hexo博客","tags":["hexo","docker"],"categories":["docker","hexo"]},{"title":"快速批量删除docker镜像或容器","date":"2018-08-20T11:54:46.000Z","author":"许盛","excerpt":"<p>docker 本身并没有提供批量删除的功能，当有大量的镜像或者容器需要删除的时候，手动的一个一个删就比较麻烦了。</p>","slug":"快速批量删除docker镜像或容器","tags":["docker"],"categories":["docker"]},{"title":"linux下使用webpack-dev-server不自动刷新页面","date":"2018-07-27T22:18:37.000Z","author":"许盛","excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>当在开发环境使用 <code>webpack-dev-server</code> 时，如果文件修改了，那么 <code>webpack-dev-server</code> 会自动重新构建，并刷新浏览器页面，之前在 <code>osx</code>、<code>windows</code> 系统上使用时都没有问题，然而最近在 <code>deepin</code> 系统上使用时，却发现没法自动刷新了，只能手动的停掉，然后重新 <code>yarn start</code>，体验极差。</p>","slug":"linux下使用webpack-dev-server不自动刷新页面","tags":["webpack","linux"],"categories":["webpack"]},{"title":"vim粘贴时缩进错乱","date":"2018-07-27T22:15:38.000Z","author":"许盛","excerpt":"","slug":"vim粘贴时缩进错乱","tags":["vim"],"categories":["vim"]},{"title":"使用owncloud搭建私有云服务","date":"2018-07-27T22:14:46.000Z","author":"许盛","excerpt":"","slug":"使用owncloud搭建私有云服务","tags":["docker","owncloud","私有云"],"categories":["owncloud"]},{"title":"简单模拟bind方法","date":"2018-07-26T23:12:00.000Z","author":"许盛","excerpt":"<p>bind 方法是经常使用的一个方法，它的作用是帮我们将调用 <code>bind</code> 函数内部的上下文对象 <code>this</code> 替换成我们传递的第一个参数，并将后面其他的参数作为调用 <code>bind</code> 函数的参数。</p>","slug":"简单模拟bind方法","tags":["javascript"],"categories":["javascript"]},{"title":"删除指定文件之外的文件的shell脚本","date":"2018-07-20T15:58:08.000Z","author":"许盛","excerpt":"<p>在上线部署的构建过程中，可能会有一些多余的文件，最终部署时，可能并不想所有文件都留着，这时候就需要在脚本中删除那些不需要的文件了。</p>","slug":"删除指定文件之外的文件的shell脚本","tags":["linux"],"categories":["linux","shell"]},{"title":"linux小工具之-ccat","date":"2018-07-19T13:53:48.000Z","author":"许盛","excerpt":"<p>在使用 <code>cat</code> 命令时，一个问题是输出的字符都是没有高亮的，这样就给阅读带来了一定的困难，这时候使用 <code>ccat</code> 的好处就体现出来了。</p>","slug":"linux小工具之-ccat","tags":["linux"],"categories":["linux"]}]}