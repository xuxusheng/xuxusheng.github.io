{"title":"删除指定文件之外的文件的shell脚本","date":"2018-07-20T15:58:08.000Z","author":"许盛","excerpt":"<p>在上线部署的构建过程中，可能会有一些多余的文件，最终部署时，可能并不想所有文件都留着，这时候就需要在脚本中删除那些不需要的文件了。</p>","slug":"删除指定文件之外的文件的shell脚本","comments":true,"tags":["linux"],"categories":["linux","shell"],"updated":"2018-08-20T05:38:46.087Z","content":"<p>在上线部署的构建过程中，可能会有一些多余的文件，最终部署时，可能并不想所有文件都留着，这时候就需要在脚本中删除那些不需要的文件了。</p>\n<a id=\"more\"></a>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>感觉目前上线脚本中处理这个的逻辑挺有意思的，记录下来以免遗忘。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DND=<span class=\"string\">\"DO_NOT_DELETE\"</span></span><br><span class=\"line\">mkdir <span class=\"variable\">$&#123;DND&#125;</span></span><br><span class=\"line\">mv default.env <span class=\"variable\">$&#123;DND&#125;</span></span><br><span class=\"line\">ls -1A | grep -v <span class=\"variable\">$&#123;DND&#125;</span> | xargs rm -rf</span><br><span class=\"line\">cp -rf <span class=\"variable\">$&#123;DND&#125;</span>/* . &amp;&amp; rm -rf <span class=\"variable\">$&#123;DND&#125;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"详解\"><a href=\"#详解\" class=\"headerlink\" title=\"详解\"></a>详解</h1><p>分析一下这段脚本的意思。</p>\n<ol>\n<li><p>第一行是定义了一个值为 <code>DO_NOT_DELETE</code> 的变量 <code>DND</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DND=<span class=\"string\">\"DO_NOT_DELETE\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第二行是创建了一个文件夹名为 <code>DO_NOT_DELETE</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir <span class=\"variable\">$&#123;DND&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第三行是将需要保存下来的文件移入到文件夹 <code>DO_NOT_DELETE</code> 中，这里是需要保留 <code>default.env</code> 这个文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv default.env <span class=\"variable\">$&#123;DND&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第四行是将所有非 <code>DO_NOT_DELETE</code> 文件夹的文件给删除掉。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -1A | grep -v <span class=\"variable\">$&#123;DND&#125;</span> | xargs rm -rf</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><code>ls -1A</code><br><code>-1</code> 表示列出所有文件，每行输出一个。<br><code>-A</code> 表示排除掉 <code>.</code> 及 <code>..</code> 的所有文件，包含隐藏文件。</p>\n</li>\n<li><p><code>grep -v {DND}</code><br>正常我们使用 <code>grep</code> 命令时，都是用户筛选出与指定字符串匹配的信息，而加上 <code>-v</code> 参数后，就变成了反选，排除掉与指定字符串像匹配的信息。</p>\n</li>\n<li><p><code>xargs rm -rf</code><br>将前面的输入，每行作为 <code>rm -rf</code> 的参数执行一遍，这样就达到了删除 <code>DO_NOT_DELETE</code> 文件夹之外的其他文件的目的。</p>\n</li>\n</ul>\n<h1 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h1><blockquote>\n<p>为什么要将不需要删除的文件移到文件夹中去，而不直接排除这个文件，删除其他文件呢？<br>一开始我也这样疑惑了一下，领导给出的答案是万一有多个文件需要保留呢？想想好像确实是这么个道理哦。</p>\n</blockquote>\n","prev":{"title":"简单模拟bind方法","slug":"简单模拟bind方法"},"next":{"title":"linux小工具之-ccat","slug":"linux小工具之-ccat"},"link":"/post/删除指定文件之外的文件的shell脚本","toc":[{"title":"背景","id":"背景","index":"1"},{"title":"详解","id":"详解","index":"2"},{"title":"Tips","id":"Tips","index":"3"}]}